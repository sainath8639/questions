[
    {
        "questionText": "<p>Consider the DOM below. Notice that the third row has unexpected image width.</p>",
        "options": [
            {
                "optionText": "<p>Adding `overflow: hidden` on the `p` element will fix the image width.</p>"
            },
            {
                "optionText": "<p>Adding `display: block` on the `img` element will fix the image width.</p>"
            },
            {
                "optionText": "<p>Adding `flex: 0 0 auto` on the `img` element will fix the image width.</p>"
            },
            {
                "optionText": "<p>Adding `flex: none` on the `img` element will fix the image width.</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>C, D</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the DOM below. Notice that the list on the right has the elements visible from #44 even though the elements in the DOM are starting from #1. <br><br>Note: <br>leftList = `section` element with `data-list=\"a\"`<br>rightList = `section` element with `data-list=\"b\"`</p>",
        "options": [
            {
                "optionText": "<p>Removing `items-center` from the main element will maintain the position of `leftList` to be in the center and will fix the `rightList` to show elements from #1</p>"
            },
            {
                "optionText": "<p>Removing `items-center` from the main element will make the `leftList` to go to the top and will have no effect on the `rightList`</p>"
            },
            {
                "optionText": "<p>On the main element, removing `items-center` and adding `align-items: stretch` will make the `leftList` increase in height while having no effect on the `rightList`</p>"
            },
            {
                "optionText": "<p>Remove `items-center` on the main element and on the `leftList` add `align-self: center` to maintain the position of the `leftList` to be in the center and to fix the `rightList` to show elements from #1</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>B, D</p>"
            },
            {
                "optionText": "<p>C, D</p>"
            },
            {
                "optionText": "<p>B, C</p>"
            },
            {
                "optionText": "<p>B, C, D</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Below is a widely adopted way to truncate text: <br><br>&nbsp; &nbsp; .truncate {</p><p>&nbsp; &nbsp; &nbsp; white-space: nowrap;</p><p>&nbsp; &nbsp; &nbsp; overflow: hidden;</p><p>&nbsp; &nbsp; &nbsp; text-overflow: ellipsis;</p><p>&nbsp; &nbsp; }<br><br>Which of the following are correct ways to identify whether the browser actually truncated the text for the element which has the above CSS class applied to it</p>",
        "options": [
            {
                "optionText": "<p>el.getBoundingClientRect().width &lt; el.clientWidth</p>"
            },
            {
                "optionText": "<p>el.scrollHeight &gt; el.clientHeight</p>"
            },
            {
                "optionText": "<p>el.scrollWidth &gt; el.clientWidth</p>"
            },
            {
                "optionText": "<p>el.getBoundingClientRect().height &lt; el.clientHeight</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the following:</p><p>&nbsp; &nbsp; // CSS</p><p>&nbsp; &nbsp; @media (min-width: 768px) {</p><p>&nbsp; &nbsp; &nbsp; .text-red{</p><p>&nbsp; &nbsp; &nbsp; &nbsp; color: red;</p><p>&nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; }</p><p>&nbsp;&nbsp; &nbsp;</p><p>&nbsp; &nbsp; .text-white {</p><p>&nbsp;&nbsp; &nbsp; color: blue;</p><p>&nbsp; &nbsp; }</p><p>&nbsp;&nbsp; &nbsp;</p><p>&nbsp; &nbsp; // HTML</p><p>&nbsp; &nbsp; &lt;div class=\"text-white text-red\"&gt;Lorem Ipsum&lt;/div&gt;</p>",
        "options": [
            {
                "optionText": "<p>For viewport width &lt; 768px, the text will be rendered in blue color</p>"
            },
            {
                "optionText": "<p>For viewport width &lt; 768px, the text will be rendered in red color</p>"
            },
            {
                "optionText": "<p>For viewport width &gt;= 768px, the text will be rendered in blue color</p>"
            },
            {
                "optionText": "<p>For viewport width &gt;= 768px, the text will be rendered in red color</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>A, D</p>"
            },
            {
                "optionText": "<p>B, C</p>"
            },
            {
                "optionText": "<p>A, C</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the following code:</p><p>&nbsp;&nbsp; &nbsp;</p><p>&nbsp; &nbsp; &lt;div class=\"flex\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;p class=\"text-2xl text-white\"&gt;Hello World&lt;/p&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;div class=\"border w-0\" /&gt;</p><p>&nbsp; &nbsp; &lt;/div&gt;</p><p>&nbsp;</p><p>Which of the following styles when applied to the `p` element will result in the rendering as per the screenshot below ?</p>",
        "options": [
            {
                "optionText": "<p>rotate: 90deg</p>"
            },
            {
                "optionText": "<p>transform: rotate(90deg)</p>"
            },
            {
                "optionText": "<p>writing-mode: vertical-lr</p>"
            },
            {
                "optionText": "<p>writing-mode: vertical-rl</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>A, B</p>"
            },
            {
                "optionText": "<p>C, D</p>"
            }
        ]
    },
    {
        "questionText": "<p>When direction: ltr is set, which of the following would result in the same result as padding-left: 10px; on div</p>",
        "options": [
            {
                "optionText": "<p>padding-inline-start: 10px;</p>"
            },
            {
                "optionText": "<p>padding-inline-end: 10px;</p>"
            },
            {
                "optionText": "<p>padding-block-start: 10px;</p>"
            },
            {
                "optionText": "<p>padding-block-end: 10px;</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the follow HTML</p><p>&nbsp; &nbsp; &lt;html&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;body&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;article style=\"padding: 10px; box-sizing: border-box; border: 1px solid;\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;section style=\"height: 100%\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div style=\"height: 100px; background-color: <span class=\"swatch-color css-uv0x2h\" style=\"--swatch-color: #ccc;\">#ccc</span>\"/&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/section&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/article&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;/body&gt;</p><p>&nbsp; &nbsp; &lt;/html&gt;</p><p><br>What will be the height of the `section` element?</p>",
        "options": [
            {
                "optionText": "<p>120px</p>"
            },
            {
                "optionText": "<p>122px</p>"
            },
            {
                "optionText": "<p>110px</p>"
            },
            {
                "optionText": "<p>100px</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the following code:</p><p>&nbsp; &nbsp; <br>&lt;div style=\"height: 10rem; background-color: <span class=\"swatch-color css-uv0x2h\" style=\"--swatch-color: #ccc;\">#ccc</span>\"/&gt;<br><br>What will be the pixel value of the div (considering default browser setting has been unchanged)</p>",
        "options": [
            {
                "optionText": "<p>10px</p>"
            },
            {
                "optionText": "<p>100px</p>"
            },
            {
                "optionText": "<p>160px</p>"
            },
            {
                "optionText": "<p>320px</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Which of following options result in font-size of 24px on `h1`s</p>",
        "options": [
            {
                "optionText": "<p>html { font-size: 10px } h1{ font-size: 2.4rem }</p>"
            },
            {
                "optionText": "<p>html { font-size: 62.5% } h1{ font-size: 2.4rem }</p>"
            },
            {
                "optionText": "<p>h1 { font-size: calc(24rem / 16) }</p>"
            },
            {
                "optionText": "<p>h1 { font-size: 1.5rem }</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>B, C, D</p>"
            },
            {
                "optionText": "<p>B, D</p>"
            }
        ]
    },
    {
        "questionText": "<p>Which of the following are valid CSS selectors</p>",
        "options": [
            {
                "optionText": "<p>[href^='https']</p>"
            },
            {
                "optionText": "<p>[href*='example.com']</p>"
            },
            {
                "optionText": "<p>[href$='.com']</p>"
            },
            {
                "optionText": "<p>a[href]</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the following hex-code used for the color CSS property:<br><br><br class=\"ProseMirror-trailingBreak\"></p><p>`#0A1B2C3D`</p>",
        "options": [
            {
                "optionText": "<p>0A represents the transparency value of the color</p>"
            },
            {
                "optionText": "<p>3D represents the transparency value of the color</p>"
            },
            {
                "optionText": "<p>0A represents the red value of the color</p>"
            },
            {
                "optionText": "<p>0A represents the green value of the color</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>B, D</p>"
            },
            {
                "optionText": "<p>B, C</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the following code:</p><p>&nbsp; &nbsp; <br>// HTML</p><p>&nbsp; &nbsp; &lt;section /&gt;</p><p>&nbsp;&nbsp; &nbsp; &nbsp; <br>// CSS</p><p>&nbsp; &nbsp; * {</p><p>&nbsp; &nbsp; &nbsp; box-sizing: border-box;</p><p>&nbsp; &nbsp; }</p><p>&nbsp;&nbsp; &nbsp;</p><p>&nbsp; &nbsp; section::before{</p><p>&nbsp; &nbsp; &nbsp; content: ' ';</p><p>&nbsp; &nbsp; &nbsp; position: absolute;</p><p>&nbsp; &nbsp; &nbsp; height: 50px;</p><p>&nbsp; &nbsp; &nbsp; width: 50px;</p><p>&nbsp; &nbsp; &nbsp; background-color: red;</p><p>&nbsp; &nbsp; &nbsp; border: 10px solid black;</p><p>&nbsp; &nbsp; }<br><br>What will be the height of the black container?</p>",
        "options": [
            {
                "optionText": "<p>50px</p>"
            },
            {
                "optionText": "<p>60px</p>"
            },
            {
                "optionText": "<p>70px</p>"
            },
            {
                "optionText": "<p>Zero</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the following code:</p><p>&nbsp; &nbsp; .box{</p><p>&nbsp; &nbsp; &nbsp; transition: height .2s;</p><p>&nbsp; &nbsp; &nbsp; border: 1px solid black;</p><p>&nbsp; &nbsp; // lineA</p><p>&nbsp; &nbsp; }</p><p>&nbsp;</p><p>&nbsp; &nbsp; .box:hover{</p><p>&nbsp; &nbsp; // lineB</p><p>&nbsp; &nbsp; }</p><p>To see the transition on height work when hovering over the `.box` element</p>",
        "options": [
            {
                "optionText": "<p>lineA = height: 50px; AND lineB = padding-top: 10px</p>"
            },
            {
                "optionText": "<p>lineA = height: 100% AND lineB = height: calc(100% + 50px)</p>"
            },
            {
                "optionText": "<p>lineA = height: 100% AND lineB = height: 50%</p>"
            },
            {
                "optionText": "<p>lineA = height: 50px AND lineB = height: 100px</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>B, D</p>"
            },
            {
                "optionText": "<p>C, D</p>"
            },
            {
                "optionText": "<p>B, C, D</p>"
            }
        ]
    },
    {
        "questionText": "<p>What is the height of the div?</p><p>&nbsp;&nbsp; &nbsp;</p><p>&lt;div style=\"background-color: <span class=\"swatch-color css-uv0x2h\" style=\"--swatch-color: #999;\">#999</span>\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;svg height=\"50px\" viewBox=\"0 0 100 100\"&nbsp; xmlns=\"http://www.w3.org/2000/svg\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;circle cx=\"50\" cy=\"50\" r=\"50\" /&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;/svg&gt;</p><p>&nbsp;&lt;/div&gt;</p>",
        "options": [
            {
                "optionText": "<p>50px</p>"
            },
            {
                "optionText": "<p>&gt;50px</p>"
            },
            {
                "optionText": "<p>&lt;50px AND &gt;0px</p>"
            },
            {
                "optionText": "<p>0px</p>"
            }
        ]
    },
    {
        "questionText": "<p>&lt;img src=\"image.png\" /&gt;<br><br>// css</p><p>img {</p><p>&nbsp; height: 100px;</p><p>&nbsp; width: 100px;</p><p>&nbsp; object-fit: cover;</p><p>&nbsp; // lineA</p><p>}</p><p><br>img:hover{</p><p>&nbsp; border: 2px solid black;</p><p>&nbsp; // lineB</p><p>}<br><br>*{</p><p>&nbsp; box-sizing: border-box;</p><p>}</p>",
        "options": [
            {
                "optionText": "<p>The picture will NOT shrink on hover</p>"
            },
            {
                "optionText": "<p>Add `border: 2px solid transparent` on lineA to avoid the picture from shrinking on hover</p>"
            },
            {
                "optionText": "<p>Replace the border declaration with `outline: 2px solid` black to avoid the picture from shrinking on hover</p>"
            },
            {
                "optionText": "<p>Removing * { box-sizing: border-box } will avoid the picture from shrinking but will result in layout shift when hovered</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>B, D</p>"
            },
            {
                "optionText": "<p>C, D</p>"
            },
            {
                "optionText": "<p>B, C, D</p>"
            }
        ]
    },
    {
        "questionText": "<p>What will be the width of the section element</p><p>&nbsp; &nbsp; &lt;div style=\"width: 500px;\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;section style=\"display: flex;\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div style=\"width: 100px; flex: none\" /&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;/section&gt;</p><p>&nbsp; &nbsp; &lt;/div&gt;</p>",
        "options": [
            {
                "optionText": "<p>100px</p>"
            },
            {
                "optionText": "<p>500px</p>"
            },
            {
                "optionText": "<p>Zero</p>"
            },
            {
                "optionText": "<p>100vw</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Which transition property is for specifying easing?</p>",
        "options": [
            {
                "optionText": "<p>transition-duration</p>"
            },
            {
                "optionText": "<p>transition-easing</p>"
            },
            {
                "optionText": "<p>transition-cubic-bezier</p>"
            },
            {
                "optionText": "<p>transition-timing-function</p>"
            },
            {
                "optionText": "<p>animation-ease</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>It's best practice to use transition-property: all</p>",
        "options": [
            {
                "optionText": "<p>TRUE</p>"
            },
            {
                "optionText": "<p>FALSE</p>"
            }
        ]
    },
    {
        "questionText": "<p>By default, flex items are aligned to stretch. If you want content size used for child items, which of the following styles would you use?</p>",
        "options": [
            {
                "optionText": "<p>justify-content: flex-start</p>"
            },
            {
                "optionText": "<p>align-content: start</p>"
            },
            {
                "optionText": "<p>height: auto</p>"
            },
            {
                "optionText": "<p>align-items: flex-start</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>To vertically align with flexbox, use</p><p>&nbsp; &nbsp; .container {</p><p>&nbsp; &nbsp; &nbsp; display: flex;</p><p>&nbsp; &nbsp; &nbsp; direction: ltr;</p><p>&nbsp; &nbsp; }</p>",
        "options": [
            {
                "optionText": "<p>align keywords</p>"
            },
            {
                "optionText": "<p>justify keywords</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>What is the difference between font-size: 16px and font-size: 1em?</p>",
        "options": [
            {
                "optionText": "<p>font-size: 16px sets the font size in pixels, while font-size: 1em sets the font size relative to the font size of the parent element</p>"
            },
            {
                "optionText": "<p>font-size: 16px sets the font size relative to the font size of the parent element, while font-size: 1em sets the font size in pixels.</p>"
            },
            {
                "optionText": "<p>font-size: 16px sets the font size in points, while font-size: 1em sets the font size relative to the font size of the parent element.</p>"
            },
            {
                "optionText": "<p>font-size: 16px sets the font size relative to the font size of the body element, while font-size: 1em sets the font size in points</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Which of the following is not a property of the CSS box model?</p>",
        "options": [
            {
                "optionText": "<p>margin</p>"
            },
            {
                "optionText": "<p>padding</p>"
            },
            {
                "optionText": "<p>border</p>"
            },
            {
                "optionText": "<p>content</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>What does the z-index property do?</p>",
        "options": [
            {
                "optionText": "<p>It determines the position of elements</p>"
            },
            {
                "optionText": "<p>It determines the size of elements.</p>"
            },
            {
                "optionText": "<p>It determines the stacking order of elements</p>"
            },
            {
                "optionText": "<p>It determines the color of elements.</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "What is the default value of the z-index property?",
        "options": [
            {
                "optionText": "<p>auto</p>"
            },
            {
                "optionText": "<p>0</p>"
            },
            {
                "optionText": "<p>1</p>"
            },
            {
                "optionText": "<p>100</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>You have a component which renders a number whose value changes based on some condition. (Consider a count down timer, stopwatch)</p><p>You notice that the size of this component is changing based on the displayed number, i.e a value “11” will take less width compared to value “88”.</p><p>What css property you can use to provide a good user experience where where the width of numbers don’t change.</p>",
        "options": [
            {
                "optionText": "<p>Add “width:auto” to prevent this.</p>"
            },
            {
                "optionText": "<p>Add “font-variant-numeric: tabular-nums”&nbsp;</p>"
            },
            {
                "optionText": "<p>Add “width:fit-content” to prevent this.</p>"
            },
            {
                "optionText": "<p>Add “width:max-content” to prevent this.</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>When loading styles, which of the following is recommended from the point of view of first page load performance?</p>",
        "options": [
            {
                "optionText": "<p>When loaded via &lt;link&gt;, add it to &lt;head&gt;</p>"
            },
            {
                "optionText": "<p>When loaded via &lt;link&gt;, add it to &lt;body&gt;</p>"
            },
            {
                "optionText": "<p>When loaded via &lt;style&gt;, add it to &lt;head&gt;</p>"
            },
            {
                "optionText": "<p>When loaded via &lt;style&gt;, add it to &lt;body&gt;</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>B, D</p>"
            },
            {
                "optionText": "<p>A, C</p>"
            }
        ]
    },
    {
        "questionText": "<p>For a script tag, which of the following is true?</p>",
        "options": [
            {
                "optionText": "<p>With defer, HTML rendering is not blocked during the download, and the JavaScript only executes after the document has otherwise finished rendering.</p>"
            },
            {
                "optionText": "<p>With async, rendering isn't blocked during the download, but once the script has finished downloading, the rendering is paused while the JavaScript is executed.</p>"
            },
            {
                "optionText": "<p>With defer, the download doesn’t start until the document has finished rendering.</p>"
            },
            {
                "optionText": "<p>With async, rendering isn't blocked during the download, and the JavaScript only executes after the document has otherwise finished rendering.</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>A, B</p>"
            },
            {
                "optionText": "<p>B, C</p>"
            },
            {
                "optionText": "<p>C, D</p>"
            }
        ]
    },
    {
        "questionText": "<p>What does the ref=nofollow on a link tag do?</p>",
        "options": [
            {
                "optionText": "<p>Makes the link not clickable</p>"
            },
            {
                "optionText": "<p>Asks spiders not to follow the link</p>"
            },
            {
                "optionText": "<p>Makes your visit to the site untrackable</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the following code:</p><p>&nbsp; &nbsp; &lt;html&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;body&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;img src=\"fox.png\" /&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry.&lt;/p&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;/body&gt;</p><p>&nbsp; &nbsp; &lt;/html&gt;<br><br><br><br class=\"ProseMirror-trailingBreak\"></p><p>To avoid the jumping of the text when the page loads, which of the following can be done:</p>",
        "options": [
            {
                "optionText": "<p>Add max-width: 100% style on the img element</p>"
            },
            {
                "optionText": "<p>Add width: 200px; style on the img element</p>"
            },
            {
                "optionText": "<p>Add height=\"500\" and width:\"333\" attributes on the img element</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the following code</p><p>&nbsp; &nbsp; &lt;picture&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;source srcset=\"small.jpg\" media=\"(max-width: 767px)\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;source srcset=\"medium.jpg\" media=\"(max-width: 1023px)\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;source srcset=\"large.jpg\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;img src=\"default.jpg\" style=\"border: 10px solid black;\" &gt;</p><p>&nbsp; &nbsp; &lt;/picture&gt;</p>",
        "options": [
            {
                "optionText": "<p>Browsers that do not support picture &amp; source elements will render the border around the image</p>"
            },
            {
                "optionText": "<p>Browsers that support picture and source elements will render the border around the image</p>"
            },
            {
                "optionText": "<p>When the viewport width is 800px, medium.jpg will be visible</p>"
            },
            {
                "optionText": "<p>medium.jpg will be downloaded only when viewport width &gt;= 767px and &lt;= 1023px</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Which of the following attributes can be used with the &lt;input&gt; element in HTML?</p>",
        "options": [
            {
                "optionText": "<p>src</p>"
            },
            {
                "optionText": "<p>name</p>"
            },
            {
                "optionText": "<p>type</p>"
            },
            {
                "optionText": "<p>value</p>"
            },
            {
                "optionText": "<p>href</p>"
            },
            {
                "optionText": "<p>size</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>B, C, D</p>"
            }
        ]
    },
    {
        "questionText": "<p>Which of the following is true about img element?</p>",
        "options": [
            {
                "optionText": "<p>&lt;img src=\"hero.jpg\" /&gt; will lead to loading of hero.jpg only when the element is visible</p>"
            },
            {
                "optionText": "<p>&lt;img src=\"hero.jpg\" loading=\"eager\" /&gt; will lead to loading of hero.jpg even when the element is not visible</p>"
            },
            {
                "optionText": "<p>&lt;img lazysrc=\"hero.jpg\" /&gt; will lead to loading of hero.jpg only when the element is visible</p>"
            },
            {
                "optionText": "<p>&lt;img loading=\"lazy\" src=\"hero.jpg\" /&gt; will lead to loading of hero.jpg only when the element is visible</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>B, C</p>"
            },
            {
                "optionText": "<p>B, D</p>"
            }
        ]
    },
    {
        "questionText": "<p>Select all correct options:</p>",
        "options": [
            {
                "optionText": "<p>&lt;img src=\"image-for-background-color-in-pattern-format.jpg\" alt=\"\" role=\"none\" /&gt; has an acceptable empty description if the image provides no additional information or is purely decorative&nbsp;</p>"
            },
            {
                "optionText": "<p>&lt;img src=\"images/user-13.png\" alt=\"Picture of Virat\" /&gt; has the appropriate value for alt attribute&nbsp;</p>"
            },
            {
                "optionText": "<p>A long description like alt=\"Fluffy, a tri-color terrier with very short hair, with a tennis ball in her mouth\" is never appropriate</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the code:</p><p>&nbsp; &nbsp; &lt;video src=\"superman.webm\" poster=\"superman.jpg\" controls&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;a href=\"https://youtube.com/watch?v=superman\"&gt;Watch on Youtube&lt;/a&gt;</p><p>&nbsp; &nbsp; &lt;/video&gt;</p>",
        "options": [
            {
                "optionText": "<p>If the video file is not found, Watch on Youtube is rendered</p>"
            },
            {
                "optionText": "<p>If the browser does not support video tag, Watch on Youtube is rendered</p>"
            },
            {
                "optionText": "<p>Watch on Youtube can never be rendered</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Consider the code:</p><p>&nbsp; &nbsp; &lt;video controls poster=\"images/superman.jpg\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;source src=\"videos/superman.webm\" type=\"video/webm\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;source src=\"videos/superman.mp4\" type=\"video/mp4\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &lt;source src=\"videos/superman.ogv\" type=\"video/ogg\"&gt;</p><p>&nbsp; &nbsp; &lt;/video&gt;</p>",
        "options": [
            {
                "optionText": "<p>All the video files are requested</p>"
            },
            {
                "optionText": "<p>All the video files which are supported by the browser are requested</p>"
            },
            {
                "optionText": "<p>If the browser supports one or more video formats, only one video file is requested if it loads alright otherwise the next satisfying video file is requested.</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Which of the following is the correct behavior of the font-display: swap property</p>",
        "options": [
            {
                "optionText": "<p>The browser will not display the text until the font has finished loading.</p>"
            },
            {
                "optionText": "<p>The browser will display the text with a placeholder font until the desired font has finished loading.</p>"
            },
            {
                "optionText": "<p>The browser will only load the font if it is necessary.</p>"
            },
            {
                "optionText": "<p>The browser will use its default font loading strategy.</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>What is the behavior of the dir=\"auto\" attribute?</p>",
        "options": [
            {
                "optionText": "<p>The browser will render text in left-to-right direction.</p>"
            },
            {
                "optionText": "<p>The browser will render text in right-to-left direction.</p>"
            },
            {
                "optionText": "<p>The browser will render text in the direction of the language of the text</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>What is DNS prefetching?</p>",
        "options": [
            {
                "optionText": "<p>A technique that tells the browser to pre-load the content of a resource that is likely to be used later in the page load.</p>"
            },
            {
                "optionText": "<p>A technique that tells the browser to pre-render the content of a resource that is likely to be used later in the page load.</p>"
            },
            {
                "optionText": "<p>A technique that tells the browser to pre-resolve the domain name of a resource that is likely to be used later in the page load.</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>Which of the following is the correct way to control the image that would show up as part of the link preview on social media sites?</p>",
        "options": [
            {
                "optionText": "<p>Update the largest image on the webpage</p>"
            },
            {
                "optionText": "<p>Update the first image on the webpage</p>"
            },
            {
                "optionText": "<p>use &lt;link rel=\"icon\" href=\"/images/favicon.ico\"&gt;</p>"
            },
            {
                "optionText": "<p>use meta tags -<br>`&lt;meta property=\"og:image\" content=\"http://www.sprinklr.com/image/burst.png\" /&gt;&lt;meta property=\"og:image:alt\" content=\"Burst drawing of Sprinklr logo containing people\" /&gt;`</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            }
        ]
    },
    {
        "questionText": "<p>To permit sprinklr.com to be iframed on https://space-qa4.sprinklr.com and https://space-prod0.sprinklr.com but not on example.com.</p>",
        "options": [
            {
                "optionText": "<p>Set Access-Control-Allow-Origin: https://*.sprinklr.com</p>"
            },
            {
                "optionText": "<p>Set Content-Security-Policy: frame-src&nbsp; https://*.sprinklr.com</p>"
            },
            {
                "optionText": "<p>Set Content-Security-Policy: frame-ancestors https://*.sprinklr.com</p>"
            },
            {
                "optionText": "<p>Set X-Frame-Options: https://*.sprinklr.com</p>"
            },
            {
                "optionText": "<p>All of the above</p>"
            },
            {
                "optionText": "<p>None of the above</p>"
            },
            {
                "optionText": "<p>A, B, D</p>"
            },
            {
                "optionText": "<p>A, C, D</p>"
            }
        ]
    }
]